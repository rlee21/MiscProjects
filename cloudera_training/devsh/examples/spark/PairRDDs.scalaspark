// Example code from the Pair RDDs chapter

// read a file with format userid[tab]firstname lastname
val userfile = "file:/home/training/training_materials/devsh/examples/example-data/userlist.tsv"
val users = sc.textFile(userfile).map(line => line.split('\t')) .map(fields => (fields(0),fields(1)))
users.collect()

// order file format: orderid:skuid,skuid,skuid...
// map to RDD of skuids keyed by orderid
val orderfile = "file:/home/training/training_materials/devsh/examples/example-data/orderskus.txt"
val orderskus = sc.textFile(orderfile).map(line => line.split('\t')).map(fields => (fields(0),fields(1))).flatMapValues(skus => skus.split(':'))
for (pair <- orderskus.take(5)) {
    println(pair._1)
    pair._2.foreach(print)
}

// Read zip code, latitude, longitude from a file, map to (zip,(lat,lon))
val zipcoordfile = "file:/home/training/training_materials/devsh/examples/example-data/latlon.tsv"
val zipcoords = sc.textFile(zipcoordfile).map(line => line.split('\t')).map(fields => (fields(0),(fields(1),fields(2))))
for ((zip,coords) <- zipcoords.take(5)) println( "Zip code: " + zip + " at " + coords)

// count words in a file
var wordfile = "file:/home/training/training_materials/devsh/examples/example-data/catsat.txt"
var counts = sc.textFile(wordfile).
    flatMap(_.split(' ')).
    map((_,1)).
    reduceByKey(_+_)

counts.take(10).foreach(println)

// Same thing, shortcut syntax
var counts2 = sc.textFile(wordfile).
    flatMap(line => line.split(' ')).
    map(word => (word,1)).
    reduceByKey((v1,v2) => v1+v2)

for (pair <- counts2.take(5)) println (pair)

// Joining by key example
val movieGross = List(("Casablanca","$3.7M"),("Star Wars","$775M"),("Annie Hall","$38M"),("Argo","$232M"))
val movieGrossRDD = sc.parallelize(movieGross)
val movieYear = List(("Casablanca",1942),("Star Wars",1977),("Annie Hall",1977),("Argo",2012))
val movieYearRDD = sc.parallelize(movieYear)
movieGrossRDD.join(movieYearRDD).foreach(println)

